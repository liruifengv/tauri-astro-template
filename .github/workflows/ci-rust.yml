name: CI-Rust

on:
  push:
    branches: [ main ]
  pull_request:
     branches: [ main ]

jobs:
  style:
    name: CI-style
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        toolchain: [stable]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout Sources
        uses: actions/checkout@v3
      - name: Cache Dependencies & Build Outputs
        uses: actions/cache@v3
        with:
          path: ~/src-tauri/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt, clippy

      - run: cd src-tauri
      
      - name: Check Code Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check

      - name: Code Lint
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features
